apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: build_and_deploy
on:
  pull_request:
    branches:
      - main
jobs:
  Build:
    outputs:
      unitTestResults: ${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}
      commit_id: ${{ steps.commitinfo.outputs.commit_id }}
      commit_msg: ${{ steps.commitinfo.outputs.commit_msg }}
      jira_key: ${{ steps.commitinfo.outputs.jira_key }}
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
          git config --global user.email "c_aannamalai@cloudbees.com"
          git config --global user.name "cashokannamalai"
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit ID: $COMMIT_ID"
          echo "Commit Message: $COMMIT_MSG"
          # Extract the JIRA issue key (assuming format like PROJECTKEY-123)
          JIRA_KEY=$(echo "$COMMIT_MSG" | grep -oE "[A-Z]+-[0-9]+")
          if [ -z "$JIRA_KEY" ]; then
            echo "Error: Commit message must include a valid JIRA issue key." >&2
            exit 1
          fi

          echo "commit_id=${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "commit_msg=${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg
          echo "jira_key=${JIRA_KEY}" >> $CLOUDBEES_OUTPUTS/jira_key
      - uses: docker://maven:3-eclipse-temurin-17
        name: Build
        kind: build
        run: mvn clean package
        shell: sh
      - name: RunUnitTest
        id: RunUnitTest
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test > "$CLOUDBEES_OUTPUTS/mvn_test_stdio"
          cat "$CLOUDBEES_OUTPUTS/mvn_test_stdio" | grep "Tests run:" | tail -1 > "$CLOUDBEES_OUTPUTS/mvn_test_stdio1"
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.STAGING_DOCKER_REGISTRY }}
          username: ${{ secrets.STAGING_DOCKER_USERNAME }}
          password: ${{ secrets.STAGING_DOCKER_PASSWORD }}
      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.STAGING_DOCKER_REGISTRY }}/${{ secrets.STAGING_DOCKER_USERNAME }}/spring-petclinic:3.2.4
      - uses: cloudbees-io/publish-test-results@v1
        name: test
        kind: test
        with:
          test-type: JUnit
          folder-name: /cloudbees/workspace/target/surefire-reports/*.xml
      - name: SonarQube analysis
        uses: docker://sonarsource/sonar-scanner-cli:latest
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=/cloudbees/workspace \
            -Dsonar.java.binaries=/cloudbees/workspace/target/classes \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |
            ## Commit Information
            - **Commit ID:** "${{ steps.commitinfo.outputs.commit_id }}"
            - **Commit Message:** "${{ steps.commitinfo.outputs.commit_msg }}"
            ## Unit Test Results
            - **Unit Test Results:** "${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}"
            - **JIRA Issue Key:** "${{ steps.commitinfo.outputs.jira_key }}"
  StaticAnalysis:
    outputs:
      BLOCKER_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }}
      CRITICAL_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }}
      MAJOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }}
      MINOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }}
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Scan with GitHub Advanced Security
        uses: cloudbees-io/github-security-sast-scan-code@v1
        with:
          token: ${{ secrets.GITHUB_SECRET }}
          language: LANGUAGE_JAVA
      - name: Scan with SonarQube bundled
        uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v1
        with:
          sonar-exclusion: src/main/java
          cover-file-name: ./pom.xml
          language: LANGUAGE_JAVA
      - uses: cloudbees-io/snyk-sast-scan-code@v1
        name: scan1
        kind: scan
        with:
          orgname: ashok.alogicfocus
          token: 79781dde-8b3d-45c6-9561-a2ebc1e9e18c
          language: LANGUAGE_JAVA
      - name: Fetch SonarQube Issues
        id: FetchSonarQubeIssues
        uses: docker://alpine/git:latest
        run: |
          apk add --no-cache curl jq
          curl -u ${{ secrets.username }}:${{ secrets.password }} \
          "https://sonarqube.cb-demos.io/api/issues/search?componentKeys=${{ secrets.SONAR_PROJECT_KEY }}&severities=BLOCKER,CRITICAL,MAJOR,MINOR" \
          -o sonar-issues.json
          BLOCKER_COUNT=$(jq '[.issues[] | select(.severity=="BLOCKER")] | length' sonar-issues.json)
          CRITICAL_COUNT=$(jq '[.issues[] | select(.severity=="CRITICAL")] | length' sonar-issues.json)
          MAJOR_COUNT=$(jq '[.issues[] | select(.severity=="MAJOR")] | length' sonar-issues.json)
          MINOR_COUNT=$(jq '[.issues[] | select(.severity=="MINOR")] | length' sonar-issues.json)

          echo "BLOCKER_COUNT=${BLOCKER_COUNT}" >> $CLOUDBEES_OUTPUTS/BLOCKER_COUNT
          echo "CRITICAL_COUNT=${CRITICAL_COUNT}" >> $CLOUDBEES_OUTPUTS/CRITICAL_COUNT
          echo "MAJOR_COUNT=${MAJOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MAJOR_COUNT
          echo "MINOR_COUNT=${MINOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MINOR_COUNT
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |
            ## SonarQube Analysis Results

            | Severity And Issue Count |
            |------------------------|

            |  ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }} |

            | ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }} |

            | ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }} |

            |  ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }} |
  Approval:
    needs: Build
    type: manual-approval
    environment: ashok
    steps:
      - name: Approval
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          echo "Manual approval required before proceeding to deployment."
  SmokeTest:
    needs: Approval
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Smoke Test
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn test
  Deploy:
    needs: SmokeTest
    environment: production
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: cloudbees-io/kustomize-deploy@v1
        name: deploy
        kind: deploy
        with:
          kustomization-base-dir: ${{ cloudbees.workspace }}/base

